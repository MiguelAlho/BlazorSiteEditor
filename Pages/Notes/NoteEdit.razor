@page "/Notes/Edit/{NoteFileName}"
@using MiguelAlho.BlazorSiteEditor.Models

<PageTitle>@CurrentNote.Title</PageTitle>

<MudTextField T="string"  @bind-Value="CurrentNote.Title" Label="Title" Required="true" RequiredError="Title is required!"/>
            
<MudTabs>
    <MudTabPanel Text="Meta" >
        <section>
            <MudTextField T="string"  @bind-Value="CurrentNote.Author" Label="Author" Required="true" RequiredError="Author is required!"/>
            <MudTextField T="string"  @bind-Value="CurrentNote.Url" Label="Url" Required="true" RequiredError="Title is required!"/>            
            <MudTextField T="string"  @bind-Value="CurrentNote.Summary" Label="Bookmark Type" Required="true" RequiredError="Title is required!" Lines=5/>
        </section>
    </MudTabPanel>
    <MudTabPanel Text="Video Notes" >
        <MudGrid>
            <MudItem xs="6">
                <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                    <figure class="image is-16by9" >
                        <iframe 
                            id="bookmark-video"
                            class="has-ratio"
                            src="@(CurrentNote.Video.Link)?enablejsapi=1"
                            title="YouTube video player"
                            frameborder="0" 
                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
                            allowfullscreen>
                        </iframe>
                    </figure>
                </MudPaper>
            </MudItem>
            <MudItem xs="6">
                <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                    <ul>@foreach (var note in CurrentNote.Notes)
                    {
                        <li>@(note.Time)<br />
                        <blockquote>@((MarkupString)@Markdown.ToHtml(@note.Content))<br/></blockquote>
                        <blockquote>@note.Comment</blockquote>
                        </li>
                    }
                    </ul>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudTabPanel>
    <MudTabPanel Text="File Content" >
        <h2>Yaml</h2>
        @currentFileContent
    </MudTabPanel>

</MudTabs>

@code
{
    public Note CurrentNote {get; set;} = new();
    private string CurrentNoteFilePath = string.Empty;
    private string currentFileContent = string.Empty;

    [Parameter]
    public string? NoteFileName { get; set; }

    private string NotesDir = UserDefinitionsService.BookmarksFolderPath;
            
    protected override void OnInitialized()
    {
        if(String.IsNullOrWhiteSpace(NoteFileName))
            return;

        var dir = new DirectoryInfo(NotesDir);
        CurrentNoteFilePath = Path.Combine(dir.FullName, NoteFileName);

        currentFileContent = File.ReadAllText(CurrentNoteFilePath);
        
        //process and load yaml to data struct
        var parts = currentFileContent.Split("---", StringSplitOptions.RemoveEmptyEntries);
        var frontMatter = parts[0];
        
        try{
            var deserializer = new DeserializerBuilder()
                .WithNamingConvention(CamelCaseNamingConvention.Instance)  // see height_in_inches in sample yml 
                .IgnoreUnmatchedProperties()
                .IgnoreFields()
                .Build();
            CurrentNote = deserializer.Deserialize<Note>(frontMatter);
        }catch(Exception ex)
        {
            Console.WriteLine(ex);
            Console.WriteLine(ex.InnerException);
        }

        StateHasChanged();
    }
}