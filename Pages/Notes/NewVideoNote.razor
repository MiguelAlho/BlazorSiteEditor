@page "/Notes/NewVideoNote"
@inject NavigationManager NavManager
@using MiguelAlho.BlazorSiteEditor.Models;

<PageTitle>Add new video note</PageTitle>

<h1>Add New Video Note</h1>
<MudTimeline TimelinePosition="TimelinePosition.Start">
    <MudTimelineItem TimelineAlign="@TimelineAlign.End" >
        <ItemContent>
            Start by adding the video link
            <MudTextField T="string"  @bind-Value="VideoLink" 
                        Label="Video Link" Required="true" 
                        RequiredError="Title is required!"
                        OnChange="ValidateVideoUrl"
                        />
            <MudButton OnClick="TryLoadMetadata">
                Load Video Metadata
            </MudButton>
            <MudTextField T="string"  @bind-Value="NewNote.Title" Label="Title" 
                Required="true" RequiredError="Title is required!"/>
                
            <MudTextField T="string"  @bind-Value="NewNote.Url" Label="Page Url" 
                Required="true" RequiredError="Url is required!"/>
        </ItemContent>
    </MudTimelineItem>

    <MudTimelineItem TimelineAlign="@TimelineAlign.End">
        <ItemContent>
            <h3>Video meta</h3>
            <MudTextField T="string" @bind-Value="NewNote.Video.Source" Label="Source" Required="true" RequiredError="Source is required!"/>
            <MudTextField T="string" @bind-Value="NewNote.Video.Id" Label="Id" Required="true" RequiredError="Id is required!"/>
            <MudTextField T="string" @bind-Value="NewNote.Video.Link" Label="Url" Required="true" RequiredError="Url is required!"/>
            
            <h4>Talk Author</h4>
            <MudTextField T="string"  @bind-Value="NewNote.Video.Author.Name" Label="Talk Author Name" />
            <MudTextField T="string"  @bind-Value="NewNote.Video.Author.Twitter" Label="Twitter" />
            <MudTextField T="string"  @bind-Value="NewNote.Video.Author.LinkedIn" Label="Linkedin" />            

            <h4>Talk Context</h4>
            <MudTextField T="string"  @bind-Value="NewNote.Video.Context.Name" Label="Event Name" />
            <MudTextField T="string"  @bind-Value="NewNote.Video.Context.Link" Label="Event Link" />
        </ItemContent>
    </MudTimelineItem>

    <MudTimelineItem TimelineAlign="@TimelineAlign.End">
        <ItemContent>
            <h3>Data:</h3>
            <MudTextField T="string"  @bind-Value="@FileName" Label="FileName" />
            <MudButton OnClick="OnSave">
                Save
            </MudButton>
        </ItemContent>
    </MudTimelineItem>


</MudTimeline>
@code
{
    public string VideoLink {get; set;} = string.Empty;
    public Note NewNote {get; set;} = new();
    public string FileName { get; set; } = ".md";
    
    protected override void OnInitialized()
    {

    }
    
    public async Task TryLoadMetadata()
    {
        var meta = await YoutubeQueryService.GetYoutubeMetadata(VideoLink);

        if (meta != null)
        {
            NewNote.Title = meta.Title;
            NewNote.Url = $"/bookmarks/{NewNote.Title.Replace(" ", "-")}";
            NewNote.Video.Id = meta.Id;
            NewNote.Video.Link = meta.EmbedLink;
            //initial file name
            FileName = CreateFileName();
        }
        StateHasChanged();
    }
    
    public void OnSave()
    {
        try{
            var notesDir = UserDefinitionsService.BookmarksFolderPath;
            var fileName = FileName;
            var filePath = Path.Combine(notesDir, fileName);

            BookmarksService.SaveBookmark(new BookmarkFile(filePath)
            {
                Note = NewNote
            });
            
            NavManager.NavigateTo($"/Notes/Edit/{fileName}");
        }catch(Exception ex)
        {
            Console.WriteLine(ex);
            Console.WriteLine(ex.InnerException);
        }
    }

    private string CreateFileName()
    {
        return $"{NewNote.Url.Trim('/').Replace("/","-")}.md";
    }
}